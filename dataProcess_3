import pandas as pd

location = 'C:\\Users\\CloudYirQ\\Desktop\\score.xlsx'
sheet1 = pd.read_excel(location, 'Sheet1')
sheet2 = pd.read_excel(location, 'Sheet2')

is_merged = False  # 防止没用过1和2就用3
is_jced = False  # 防止没用过6就用7
while True:
    print('''
    1) 数据清洗，去掉工作表成绩单中含缺失值的行
    2) 将工作表成绩单和工作表Sheet2按学号相等合并
    3) 统计总成绩的基本统计信息
    4) 统计各个班学生人数、平均成绩、最高分、最低分等
    5) 抽取各班最低分学生的信息
    6) 统计各个班不及格、及格、中等、良好和优秀人数
    7) 在上题基础上分析各等级人数占本班人数的占比
    8) 分析总成绩与平时成绩的相关性
    ''')
    user_option = input("Please choose a function: ")
    if user_option == '1':
        print(sheet1.shape, sheet1.columns)
        sheet1[sheet1.期末成绩.isnull()]
        sheet1 = sheet1.dropna()
        print(sheet1.shape)
        input("Press Enter to continue")
    elif user_option == '2':
        is_merged = True
        print(sheet2.shape, sheet2.columns)
        merge_score = pd.merge(sheet1, sheet2, left_on='学号', right_on='学号')
        print(merge_score.shape, merge_score.columns)
        input("Press Enter to continue")
    elif user_option == '3':
        if is_merged:
            print(merge_score.总评成绩.describe())
            input("Press Enter to continue")
        else:
            input("Please run function 2 first.")
    elif user_option == '4':
        df1 = merge_score.groupby('班级')['总评成绩'].agg(['count', 'mean', 'std', 'max', 'min'])
        print(df1)
        input("Press Enter to continue")
    elif user_option == '5':
        def get_min(x):
            newdata = x.sort_values(by='总评成绩')
            return newdata.iloc[0]


        df2 = merge_score.groupby('班级').apply(get_min)
        print(df2)
        input("Press Enter to continue")
    elif user_option == '6':
        is_jced = True
        bins = [0, 60, 70, 80, 90, 101]
        label = ['不及格', '及格', '中等', '良好', '优秀']
        merge_score['成绩分布'] = pd.cut(merge_score['总评成绩'], bins, right=False, labels=label)
        fb_data = merge_score[['班级', '总评成绩', '成绩分布']]
        jc_data = pd.pivot_table(fb_data, index='班级', columns='成绩分布', aggfunc='count')
        jc_data.fillna(0, inplace=True)
        print(jc_data)
        input("Press Enter to continue")
    elif user_option == '7':
        if is_jced:
            zb_data = jc_data.div(jc_data.sum(axis=1), axis=0)
            f = lambda x: '%.2f%%' % (x * 100)
            zb_data.applymap(f)
            print(zb_data)
            input("Press Enter to continue")
        else:
            input("Please run function 6 first.")
    elif user_option == '8':
        print(merge_score.loc[:, ['平时成绩', '期末成绩', '总评成绩']].corr())
        input("Press Enter to continue")
    elif user_option == '0':
        break
    else:
        input("Please input a correct number. Or input 0 to exit")
